{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","API_URL","concat","FindMovie","setMovies","_useState","useState","_useState2","_slicedToArray","query","setQuery","_useState3","_useState4","comparisonQuery","setComparisonQuery","_useState5","_useState6","movieData","setMovieData","_useState7","_useState8","setMovie","_useState9","_useState10","loader","setLoader","handleFindButton","event","preventDefault","fetch","then","res","json","catch","Response","Error","getMovie","finally","useEffect","Title","Plot","Poster","imdbID","_Fragment","htmlFor","type","id","placeholder","cn","onChange","e","target","value","onClick","disabled","isInclude","some","mov","_toConsumableArray","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.944d99ce.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_KEY = '9fe27eae';\nconst API_URL = `https://www.omdbapi.com/?apikey=${API_KEY}`;\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, { useEffect, useState } from 'react';\nimport './FindMovie.scss';\nimport cn from 'classnames';\nimport { getMovie } from '../../api';\nimport { MovieData } from '../../types/MovieData';\nimport { ResponseError } from '../../types/ReponseError';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\n\nconst DEFAULT_IMG = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\ntype Props = {\n  movies: Movie[];\n  setMovies: (value: Movie[]) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ movies, setMovies }) => {\n  const [query, setQuery] = useState('');\n  const [comparisonQuery, setComparisonQuery] = useState('');\n  const [\n    movieData,\n    setMovieData,\n  ] = useState<MovieData | ResponseError | null>(null);\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [loader, setLoader] = useState(false);\n\n  const handleFindButton = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) => {\n    event.preventDefault();\n\n    setLoader(true);\n    getMovie(query).then(setMovieData).finally(() => setLoader(false));\n    setComparisonQuery(query);\n  };\n\n  const handleAddButton = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) => {\n    event.preventDefault();\n\n    const isInclude = movies.some((mov: Movie) => mov.title === movie?.title);\n\n    if (movie && !isInclude) {\n      setMovies([...movies, movie]);\n    }\n\n    setQuery('');\n    setMovie(null);\n  };\n\n  useEffect(() => {\n    if (movieData?.Response === 'True') {\n      setMovie({\n        title: movieData.Title,\n        description: movieData.Plot,\n        imgUrl:\n          movieData.Poster === 'N/A'\n            ? DEFAULT_IMG\n            : movieData.Poster,\n        imdbUrl: `https://www.imdb.com/title/${movieData.imdbID}`,\n        imdbId: movieData.imdbID,\n      });\n    }\n\n    if (movieData?.Response === 'False') {\n      setMovie(null);\n    }\n  }, [movieData]);\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn('input', {\n                'is-danger':\n                  movieData?.Response === 'False'\n                  && comparisonQuery === query,\n              })}\n              onChange={(e) => setQuery(e.target.value)}\n              value={query}\n            />\n          </div>\n\n          {movieData?.Response === 'False' && comparisonQuery === query && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn('button', {\n                'is-light': !loader,\n                'is-loading': loader,\n              })}\n              onClick={(e) => handleFindButton(e)}\n              disabled={!query}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddButton}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          movies={movies}\n          setMovies={setMovies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}